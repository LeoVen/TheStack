services:
  stack_api:
    build:
      context: .
      args:
        - BINARY_NAME=the_stack
    ports:
      - 3000:3000
      - 5555:6669 # tokio console
    networks:
      - subnet_1
    env_file:
      - path: .env
        required: true
    environment:
      - CACHE_REDIS_HOST=redis
      - DATABASE_POSTGRES_HOST=appdb
    depends_on:
      appdb:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    build:
      context: ./docker/redis
    ports:
      - "6379:6379"
    networks:
      - subnet_1
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  appdb:
    build:
      context: ./docker/postgresql
    ports:
      - 5432:5432
    env_file:
      - path: .env
        required: true
    networks:
      - subnet_1
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  kcdb:
    build:
      context: ./docker/postgresql
    ports:
      - 5433:5432
    env_file:
      - path: .env
        required: true
    networks:
      - subnet_1
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  keycloak:
    build:
      context: ./docker/keycloak
    command: start-dev
    env_file:
      - path: .env
        required: true
    ports:
      - 8080:8080
    depends_on:
      kcdb:
        condition: service_healthy
    networks:
      - subnet_1

  prometheus:
    build:
      context: ./docker/prometheus
    env_file:
      - path: .env
        required: true
    ports:
      - 9090:9090
    networks:
      - subnet_1
    depends_on:
      - stack_api

  grafana:
    build:
      context: ./docker/grafana
    env_file:
      - path: .env
        required: true
    ports:
      - 9999:3000
    networks:
      - subnet_1
    depends_on:
      - prometheus

networks:
  subnet_1:
